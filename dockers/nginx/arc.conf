server {
  listen 80 default_server;
  #listen 443 ssl http2 default_server;
  
  server_name _;
  #include ssl/ssl.conf;

  access_log /var/log/nginx/access.log main;
  error_log  /var/log/nginx/error.log warn;

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  #proxy_set_header Host exnode.ru;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Forwarded-Host $host;
  proxy_set_header X-Forwarded-Port $server_port;
  proxy_cache_bypass $http_upgrade;

  # if ($uri ~ ^(?!/guide/|/_next/|/img/|/image/|/photo/|/trading/|/-cache-icons-/).+([A-Z])) {
  #   return 301 $scheme://$host$uri_lowercase;
  # }

  #rewrite ^(?!/guide/|/_next/|/img/|/image/|/photo/|/trading/|/-cache-icons-/).+([A-Z]) $scheme://$host$uri_lowercase;

    #rewrite ^/ru/(.*)$ https://aaaa.ru/$1 permanent;



    #rewrite ^/xxx/xxxx-aaaa/(.*)$ https://$http_host/vvvv/vvvv-bbbb/$1 permanent;

### next static

  # location /_next/static {
  #   proxy_cache STATIC;
  #   proxy_cache_key "$host$request_uri";
  #   proxy_ignore_headers Cache-Control;
  #   proxy_cache_valid 30m;
  #   proxy_pass http://xxx;
  # }

  # location /_next/data {
  #   proxy_cache STATIC;
  #   proxy_cache_key "$host$request_uri";
  #   proxy_ignore_headers Cache-Control;
  #   proxy_cache_valid 15s;
  #   proxy_pass http://xxx;
  # }


  # STATIC ASSETS (E.G. IMAGES)
  # Browser cache - "no-cache" headers from Next.js as no build id in url
  # Server cache - refresh regularly in case of changes
  # location /static {
  #   proxy_cache STATIC;
  #   proxy_cache_key "$host$request_uri";
  #   proxy_ignore_headers Cache-Control;
  #   proxy_cache_valid 180m;
  #   proxy_pass http://xxx;
  # }

  merge_slashes off;
  # DYNAMIC ASSETS - NO CACHE
  location / {
    rewrite ^([^.]*?\/)\/+(.*)$ $1$2 permanent;
    rewrite ^([^.]*[^/])$ $1/ permanent;
    proxy_pass http://xxx;
    proxy_cache STATIC;
    proxy_cache_key "$host$request_uri";
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 200 30m;
  }



##############

location /-cache-images- {
    rewrite /-cache-images-/(.*) /$1  break;
    proxy_set_header Connection 'default';
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 1d;
    proxy_pass http://xxx:xxx/;
}



}
